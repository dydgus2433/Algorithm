// 그냥 Data 하나 가지고 돌리는 방법을 생각했다.
// 처음에 배열식으로 만들까 하다가 그러면 속도도 개판에 용량도 개판이라 생략했다.
// 다만 if문이 겁나 많다 . 이해바람. 
// 다행인건 용량은 괜찮다는거...?

#include<iostream>
using namespace std;

int main()
{
	int Count[10] = {0,}; // 몇개가 나왓는지 세는것 ( 0 ~ 9)
	int Data; // 1부터 적을것 . 
		cout << "원하는 수를 적어주세요 : ( 1 ~ 99,999,999 까지 ) ";
		cin >> Data;
		for (int i = 0; i <= Data; i++)
		{
			if ((i > 0) && (i < 10))
			{
				Count[i]++;

			} // 1부터 9일때 
			else if ((i >= 10) && (i < 100))
			{
				int A, B;
				A = i / 10; // 십의 자리 
				B = i - (A * 10); // 일의 자리
				Count[A]++, Count[B]++;
			} //10부터 99까지

			else if ((i >= 100) && (i < 1000))
			{
				int A, B, C;
				A = i / 100; // 백의 자리
				B = (i - (A * 100)) / 10; // 십의 자리
				C = i - (A * 100) - (B * 10); // 일의 자리 
				Count[A]++, Count[B]++, Count[C]++;
			}
			else if ((i >= 1000) && (i < 10000))
			{
				int A, B, C, D;
				A = i / 1000; // 천의 자리
				B = (i - (A * 1000)) / 100; // 백의 자리
				C = (i - (A * 1000) - (B * 100)) / 10; // 십의 자리
				D = i - (A * 1000) - (B * 100) - (C * 10); // 일의 자리
				Count[A]++, Count[B]++, Count[C]++, Count[D]++;
			}
			else if ((i >= 10000) && (i < 100000))
			{
				int A,B,C,D,E;
				A = i / 10000;
				B = (i - (A * 10000)) / 1000;
				C = (i - (A * 10000) - (B * 1000)) / 100;
				D = (i - (A * 10000) - (B * 1000) - (C * 100)) / 10;
				E = i - (A * 10000) - (B * 1000) - (C * 100) - (D * 10);
				Count[A]++, Count[B]++, Count[C]++, Count[D]++, Count[E]++;
			}
			else if ((i >= 100000) && (i < 1000000))
			{
				int A, B, C, D, E, F;
				A = i / 100000;
				B = (i - (A * 100000)) / 10000;
				C = (i - (A * 100000) - (B * 10000)) / 1000;
				D = (i - (A * 100000) - (B * 10000) - (C * 1000)) / 100;
				E = (i - (A * 100000) - (B * 10000) - (C * 1000)- (D*100)) / 10;
				F = i - (A * 100000) - (B * 10000) - (C * 1000) - (D * 100)-(E*10);
				Count[A]++, Count[B]++, Count[C]++, Count[D]++, Count[E]++, Count[F]++;
			}
			else if ((i >= 1000000) && (i < 10000000))
			{
				int A, B, C, D, E, F,G;
				A = i / 1000000;
				B = (i - (A * 1000000)) / 100000;
				C = (i - (A * 1000000) - (B * 100000)) / 10000;
				D = (i - (A * 1000000) - (B * 100000) - (C * 10000)) / 1000;
				E = (i - (A * 1000000) - (B * 100000) - (C * 10000) - (D * 1000)) / 100;
				F = (i - (A * 1000000) - (B * 100000) - (C * 10000) - (D * 1000)-(E*100)) / 10;
				G = i - (A * 1000000) - (B * 100000) - (C * 10000) - (D * 1000) - (E * 100)-(F*10);
				Count[A]++, Count[B]++, Count[C]++, Count[D]++, Count[E]++, Count[F]++, Count[G]++;
			}

			else if ((i >= 10000000) && (i < 100000000))
			{
				int A, B, C, D, E, F, G,H;
				A = i / 10000000;
				B = (i - (A * 10000000)) / 10000000;
				C = (i - (A * 10000000) - (B * 1000000)) / 100000;
				D = (i - (A * 10000000) - (B * 1000000) - (C * 100000)) / 10000;
				E = (i - (A * 10000000) - (B * 1000000) - (C * 100000) - (D * 10000)) / 1000;
				F = (i - (A * 10000000) - (B * 1000000) - (C * 100000) - (D * 10000) - (E * 1000)) / 100;
				G = (i - (A * 10000000) - (B * 1000000) - (C * 100000) - (D * 10000) - (E * 1000)-(F *100)) / 10;
				H = i - (A * 10000000) - (B * 1000000) - (C * 100000) - (D * 10000) - (E * 1000) - (F * 100)-(G*10);
				Count[A]++,Count[B]++, Count[C]++, Count[D]++, Count[E]++, Count[F]++, Count[G]++, Count[H]++;
			}

		}
	

	for (int j = 0; j < 10; j++)
	{
		cout << j <<" " ;
	}
	cout << endl;
	for (int j = 0; j < 10; j++)
	{
		cout <<Count[j]<< " ";
	}
	cout << endl;

}
